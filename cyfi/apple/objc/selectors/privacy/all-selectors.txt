initWithAccessToEntityTypes:
requestAccessToEntityType:completion:
authorizationStatusForEntityType:
commit:
calendarItemWithIdentifier:
calendarItemsWithExternalIdentifier:
calendarWithIdentifier:
calendarsForEntityType:
cancelFetchRequest:
enumerateEventsMatchingPredicate:usingBlock:
eventWithIdentifier:
eventsMatchingPredicate:
fetchRemindersMatchingPredicate:completion:
predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:
predicateForEventsWithStartDate:endDate:calendars:
predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:
predicateForRemindersInCalendars:
removeCalendar:commit:error:
removeEvent:span:error:
removeEvent:span:commit:error:
removeReminder:commit:error:
saveCalendar:commit:error:
saveEvent:span:error:
saveEvent:span:commit:error:
saveReminder:commit:error:
sourceWithIdentifier:
initWithSources:
initWithKeysToFetch:
addContact:toContainerWithIdentifier:
updateContact:
deleteContact:
addGroup:toContainerWithIdentifier:
updateGroup:
deleteGroup:
addMember:toGroup:
removeMember:fromGroup:
addSubgroup:toGroup:
removeSubgroup:fromGroup:
fetchAssetsInAssetCollection:options:
fetchAssetsWithMediaType:options:
fetchAssetsWithLocalIdentifiers:options:
fetchKeyAssetsInAssetCollection:options:
fetchAssetsWithOptions:
fetchAssetsWithBurstIdentifier:options:
fetchAssetsWithALAssetURLs:options:
canPerformEditOperation:
requestContentEditingInputWithOptions:completionHandler:
cancelContentEditingInputRequest:
fetchAssetCollectionsWithLocalIdentifiers:options:
fetchAssetCollectionsWithType:subtype:options:
fetchAssetCollectionsContainingAsset:withType:options:
fetchAssetCollectionsWithALAssetGroupURLs:options:
fetchMomentsInMomentList:options:
fetchMomentsWithOptions:
transientAssetCollectionWithAssets:title:
transientAssetCollectionWithAssetFetchResult:title:
fetchCollectionsInCollectionList:options:
fetchTopLevelUserCollectionsWithOptions:
canPerformEditOperation:
fetchCollectionListsContainingCollection:options:
fetchCollectionListsWithLocalIdentifiers:options:
fetchCollectionListsWithType:subtype:options:
fetchMomentListsWithSubtype:containingMoment:options:
fetchMomentListsWithSubtype:options:
transientCollectionListWithCollections:title:
transientCollectionListWithCollectionsFetchResult:title:
containsObject:
countOfAssetsWithMediaType:
objectAtIndex:
objectAtIndexedSubscript:
objectsAtIndexes:
indexOfObject:
indexOfObject:inRange:
enumerateObjectsAtIndexes:options:usingBlock:
enumerateObjectsUsingBlock:
enumerateObjectsWithOptions:usingBlock:
requestImageForAsset:targetSize:contentMode:options:resultHandler:
requestImageDataAndOrientationForAsset:options:resultHandler:
requestImageDataForAsset:options:resultHandler:
requestPlayerItemForVideo:options:resultHandler:
requestExportSessionForVideo:options:exportPreset:resultHandler:
requestAVAssetForVideo:options:resultHandler:
requestLivePhotoForAsset:targetSize:contentMode:options:resultHandler:
cancelImageRequest:
startCachingImagesForAssets:targetSize:contentMode:options:
stopCachingImagesForAssets:targetSize:contentMode:options:
startDeviceMotionUpdatesUsingReferenceFrame:toQueue:withHandler:
startDeviceMotionUpdatesToQueue:withHandler:
startDeviceMotionUpdatesUsingReferenceFrame:
startAccelerometerUpdatesToQueue:withHandler:
startGyroUpdatesToQueue:withHandler:
startMagnetometerUpdatesToQueue:withHandler:
isMonitoringAvailableForClass:
requestTemporaryFullAccuracyAuthorizationWithPurposeKey:completion:
requestTemporaryFullAccuracyAuthorizationWithPurposeKey:
startMonitoringForRegion:
stopMonitoringForRegion:
startMonitoringForRegion:desiredAccuracy:
requestStateForRegion:
startRangingBeaconsSatisfyingConstraint:
stopRangingBeaconsSatisfyingConstraint:
startRangingBeaconsInRegion:
stopRangingBeaconsInRegion:
allowDeferredLocationUpdatesUntilTraveled:timeout:
locationManagerDidChangeAuthorization:
locationManager:didChangeAuthorizationStatus:
locationManager:didFailWithError:
locationManager:didUpdateLocations:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didFinishDeferredUpdatesWithError:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didDetermineState:forRegion:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didStartMonitoringForRegion:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didVisit:
deviceWithUniqueID:
defaultDeviceWithMediaType:
defaultDeviceWithDeviceType:mediaType:position:
devicesWithMediaType:
requestAccessForMediaType:completionHandler:
authorizationStatusForMediaType:
lockForConfiguration:
hasMediaType:
supportsAVCaptureSessionPreset:
setExposureModeCustomWithDuration:ISO:completionHandler:
setExposureTargetBias:completionHandler:
isExposureModeSupported:
rampToVideoZoomFactor:withRate:
isFocusModeSupported:
isFlashModeSupported:
isTorchModeSupported:
setTorchModeOnWithLevel:error:
setTransportControlsPlaybackMode:speed:
setFocusModeLockedWithLensPosition:completionHandler:
isWhiteBalanceModeSupported:
chromaticityValuesForDeviceWhiteBalanceGains:
deviceWhiteBalanceGainsForChromaticityValues:
deviceWhiteBalanceGainsForTemperatureAndTintValues:
setWhiteBalanceModeLockedWithDeviceWhiteBalanceGains:completionHandler:
temperatureAndTintValuesForDeviceWhiteBalanceGains:
extrinsicMatrixFromDevice:toDevice:
initWithDevice:error:
deviceInputWithDevice:error:
portsWithMediaType:sourceDeviceType:sourceDevicePosition: